%include "../LIB/pc_iox.inc"
extern pBin_n
extern pBin_b
extern pBin_w
extern pBin_dw 

section	.text

	global _start

_start:

    ;nasm -f elf index3.asm && ld -m elf_i386 index3.o ../LIB/libpc_iox.a -o index3 && ./index3
    ;nasm -f elf index3.asm && ld -m elf_i386 index3.o ../LIB/libpc_iox.a ../LIB/pbin.o -o index3 && ./index3


    ;-------------------------------------------------------------------------------------------

    
    mov eax,0x22446688

    ;Rotamos hacia la derecha
    ror eax,4

	call pHex_dw

    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------

    mov cx,0x3F48
    ;Hacemos el corrimiento hacia la izquierda
    shl cx,3
    xor eax,eax
    mov ax,cx

    call pHex_dw
    mov cx,ax

    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------



    mov esi,0x20D685F3
    mov eax,0x40042021

    xor eax,esi

    call pBin_dw

    ;Guardamos el valor de ESI en la pila
    mov esi,eax
    push esi

    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------


    xor eax,eax

    mov ch,0xA7
    mov ah,0xEF

    or ah,ch

    call pBin_w


    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------

    mov bp,0x67DA
    mov ax,0x2399

    and ax,bp
    call pBin_w

    mov bp,ax

    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------


    shr bp,3
    mov ax,bp

    call pBin_w


    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------

    ;mov ebx,32

    shr ebx,5
    mov eax,ebx
    call pBin_dw

    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------
    
    ;mov cx,8
    shl cx,3
    mov ax,cx

    call pBin_dw


    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------

    pop esi

    mov esi,10
    mov ebx,esi

    shl esi,3 ;2**3=8
    shl ebx,1 ;2**1=2

    add esi,ebx
    mov eax,esi

    call pBin_dw


    ;-------------------------------------------------------------------------------------------
	mov al,10
	call putchar
    ;-------------------------------------------------------------------------------------------

	mov eax, 1	;system call number (sys_exit) -- fin del programa
	int 0x80        ;call kernel


section .data
N dw 0
